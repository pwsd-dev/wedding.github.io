/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-nav-call-white-name: 'icon-nav-call-white';
@icon-nav-call-white-x: 42px;
@icon-nav-call-white-y: 42px;
@icon-nav-call-white-offset-x: -42px;
@icon-nav-call-white-offset-y: -42px;
@icon-nav-call-white-width: 19px;
@icon-nav-call-white-height: 18px;
@icon-nav-call-white-total-width: 104px;
@icon-nav-call-white-total-height: 74px;
@icon-nav-call-white-image: '../assets/icons/sprite.png';
@icon-nav-call-white: 42px 42px -42px -42px 19px 18px 104px 74px '../assets/icons/sprite.png' 'icon-nav-call-white';
@icon-nav-call-name: 'icon-nav-call';
@icon-nav-call-x: 86px;
@icon-nav-call-y: 0px;
@icon-nav-call-offset-x: -86px;
@icon-nav-call-offset-y: 0px;
@icon-nav-call-width: 18px;
@icon-nav-call-height: 18px;
@icon-nav-call-total-width: 104px;
@icon-nav-call-total-height: 74px;
@icon-nav-call-image: '../assets/icons/sprite.png';
@icon-nav-call: 86px 0px -86px 0px 18px 18px 104px 74px '../assets/icons/sprite.png' 'icon-nav-call';
@icon-nav-instagram-name: 'icon-nav-instagram';
@icon-nav-instagram-x: 0px;
@icon-nav-instagram-y: 0px;
@icon-nav-instagram-offset-x: 0px;
@icon-nav-instagram-offset-y: 0px;
@icon-nav-instagram-width: 33px;
@icon-nav-instagram-height: 32px;
@icon-nav-instagram-total-width: 104px;
@icon-nav-instagram-total-height: 74px;
@icon-nav-instagram-image: '../assets/icons/sprite.png';
@icon-nav-instagram: 0px 0px 0px 0px 33px 32px 104px 74px '../assets/icons/sprite.png' 'icon-nav-instagram';
@icon-nav-vk-name: 'icon-nav-vk';
@icon-nav-vk-x: 43px;
@icon-nav-vk-y: 0px;
@icon-nav-vk-offset-x: -43px;
@icon-nav-vk-offset-y: 0px;
@icon-nav-vk-width: 33px;
@icon-nav-vk-height: 32px;
@icon-nav-vk-total-width: 104px;
@icon-nav-vk-total-height: 74px;
@icon-nav-vk-image: '../assets/icons/sprite.png';
@icon-nav-vk: 43px 0px -43px 0px 33px 32px 104px 74px '../assets/icons/sprite.png' 'icon-nav-vk';
@icon-nav-whatsapp-name: 'icon-nav-whatsapp';
@icon-nav-whatsapp-x: 0px;
@icon-nav-whatsapp-y: 42px;
@icon-nav-whatsapp-offset-x: 0px;
@icon-nav-whatsapp-offset-y: -42px;
@icon-nav-whatsapp-width: 32px;
@icon-nav-whatsapp-height: 32px;
@icon-nav-whatsapp-total-width: 104px;
@icon-nav-whatsapp-total-height: 74px;
@icon-nav-whatsapp-image: '../assets/icons/sprite.png';
@icon-nav-whatsapp: 0px 42px 0px -42px 32px 32px 104px 74px '../assets/icons/sprite.png' 'icon-nav-whatsapp';
@icon-strelka-name: 'icon-strelka';
@icon-strelka-x: 86px;
@icon-strelka-y: 28px;
@icon-strelka-offset-x: -86px;
@icon-strelka-offset-y: -28px;
@icon-strelka-width: 13px;
@icon-strelka-height: 13px;
@icon-strelka-total-width: 104px;
@icon-strelka-total-height: 74px;
@icon-strelka-image: '../assets/icons/sprite.png';
@icon-strelka: 86px 28px -86px -28px 13px 13px 104px 74px '../assets/icons/sprite.png' 'icon-strelka';
@spritesheet-width: 104px;
@spritesheet-height: 74px;
@spritesheet-image: '../assets/icons/sprite.png';
@spritesheet-sprites: @icon-nav-call-white @icon-nav-call @icon-nav-instagram @icon-nav-vk @icon-nav-whatsapp @icon-strelka;
@spritesheet: 104px 74px '../assets/icons/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
